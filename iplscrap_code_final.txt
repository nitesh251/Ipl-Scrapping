import urllib.request
from bs4 import BeautifulSoup
import pandas as pd

def scrap(a):

  pgread=urllib.request.urlopen(a)
  content=BeautifulSoup(pgread)
  print(content.title.text)
  table=content.find('table')
  rows=table.find_all('tr')
  heads=table.find_all('th')
  header=[]
  data=[]
  for row in rows:
    td=row.find_all('td')
    arr=[i.text for i in td]
    data.append(arr)


  for head in heads:
    header.append(head.text)
  data.pop(0)

  df=pd.DataFrame(data,columns=header)
  df.set_index("POS",inplace=True)
  df[" Avg "]=df[' Avg '].str.replace('-','0')
  df[' SR ']=df[' SR '].str.replace('-','0')
  

  if(' Ov ' in df.columns):
    df['Bowling_Consistency']=0.4174*pd.to_numeric(df[' Ov '])+ 0.2634*pd.to_numeric(df[' Inns ']) + 0.1602*pd.to_numeric(df[' SR ']) +     0.0975*pd.to_numeric(df[' Avg ']) +0.0615*pd.to_numeric(df[' 4w '])

    df['Bowling_Form']=0.3269*pd.to_numeric(df[' Ov ']) + 0.2846*pd.to_numeric(df[' Inns ']) + 0.1877*pd.to_numeric(df[' SR ']) +           0.1210*pd.to_numeric(df[' Avg ']) +0.0798*pd.to_numeric(df[' 4w '])

    def rat(row):
      if row['Bowling_Consistency'] >= 1 and row['Bowling_Consistency'] <=20:
        return '1'
      if row['Bowling_Consistency']>20 and  row['Bowling_Consistency']<=40:
        return '2'
      if row['Bowling_Consistency'] >40 and row['Bowling_Consistency']<= 80 :
        return '3'
      if row['Bowling_Consistency'] >80 and row['Bowling_Consistency']<=100:
        return '4'
      else:
        return '5'
    df['Rating_consistency'] = df.apply (lambda row: rat(row),axis=1)
    X=np.asarray(df[[' Avg ',' Ov ',' Inns ',' SR ',' 4w ']])

  else:
    df['Batting_consistency']=0.3345*pd.to_numeric(df[' Avg '])+ 0.2566*pd.to_numeric(df[' Inns ']) + 0.1510*pd.to_numeric(df[' SR ']) +     0.0787*pd.to_numeric(df[' 100 ']) +0.0556*pd.to_numeric(df[' 50 ']) 

    df['Batting_Form']=0.4262*pd.to_numeric(df[' Avg ']) + 0.2566*pd.to_numeric(df[' Inns ']) + 0.1510*pd.to_numeric(df[' SR ']) +           0.0787*pd.to_numeric(df[' 100 ']) +0.0556*pd.to_numeric(df[' 50 '])

    def rat(row):
      if row['Batting_consistency'] >= 1 and row['Batting_consistency'] <=20:
        return '1'
      if row['Batting_consistency']>20 and  row['Batting_consistency']<=40:
        return '2'
      if row['Batting_consistency'] >40 and row['Batting_consistency']<= 80 :
        return '3'
      if row['Batting_consistency'] >80 and row['Batting_consistency']<=100:
        return '4'
      else:
        return '5'
    df['Rating_consistency'] = df.apply (lambda row: rat(row),axis=1)
    X=np.asarray(df[[' Avg ',' Runs ',' Inns ',' 100 ',' 50 ']])


  

  return(df)



###############=======================MAIN=========================#############################

a="https://www.iplt20.com/stats/all-time/most-runs"
df_all_time=scrap(a)

print(df_all_time.head(100))
df_all_time.to_csv("ipl_alltime_dataset")


